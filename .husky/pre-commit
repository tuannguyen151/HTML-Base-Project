#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

echo '🏗️👷 Styling your project before committing👷‍♂️🏗️'
echo 'please be patient, this may take a while...'

GREEN='\033[0;32m'
GREEN_BLUE='\033[38;2;64;142;145m'
RESET='\033[0m'

# Function to print files
print_files() {
    echo "${GREEN_BLUE}$1${RESET}"
}

# Function to run checks
run_check() {
    echo "\n✨ $1 check:"
    if [ -n "$2" ]; then
        print_files "$3"
        eval "$4" ||
        (
            echo "🔨❌ Failed $1 check. 🔨❌";
            echo "$5";
            false;
        )
    else
        echo "\n✨ $1: No change files found 🎉"
    fi
}

# Get all staged files without deleted files
stagedFiles=$(git diff --cached --name-status | grep -E '^[AMR]' | awk '{if ($1 ~ /^R/) print $3; else print $2}')

# Prettier check
prettierCheckFiles=$(echo "$stagedFiles" | grep -E '\.(js|css|json|html)$' | tr '\n' ' ')
prettierFixCmd="${GREEN}npm run format${RESET}"
run_check "Prettier" "$prettierCheckFiles" "$prettierCheckFiles" "npx prettier -c $prettierCheckFiles" "Run the following command to fix Prettier issues:\n$prettierFixCmd\nAdd changes and try commit again."

# Lint check
lintCheckFiles=$(echo "$stagedFiles" | grep -E '\.(js|html)$' | tr '\n' ' ')
lintFixCmd="Run ${GREEN}npm run lint${RESET}, add changes and try commit again."
run_check "Lint" "$lintCheckFiles" "$lintCheckFiles" "npx eslint $lintCheckFiles --no-warn-ignored" "$lintFixCmd"

echo '\n🎉 No error found: committing this now.... ✨🚀🏄‍♂️🍻'

npx lint-staged
